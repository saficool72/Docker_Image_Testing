name: Deploy Docker Image to Amazon EKS

on:
  workflow_dispatch:
  #push:
  #  branches: [ "main" ]

env:
  AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-east-1
  EKS_CLUSTER_NAME: my-cluster              #set eks cluster name here
  EKS_NAMESPACE_NAME: hk-namespace
  
jobs:
  KubeLinter_job:
    name: KubeLinter
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Scan Yaml files with KubeLinter
      id: kube-linter-action
      uses: stackrox/kube-linter-action@v1.0.5
      with:
        directory: manifests
        format: json
        output-file: kube-linter-report.json
        #fail_on_error: true  # This will cause the job to fail if issues are found
      continue-on-error: true  # Continue even if KubeLinter detects errors

    - name: Upload KubeLinter report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: kube-linter-report
        path: kube-linter-report.json

  deploy-to-eks:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: KubeLinter_job
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      id: configure-aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Helm tool installer
      uses: Azure/setup-helm@v3

    - name: Install Kubectl
      id: kubectl-install
      uses: Azure/setup-kubectl@v4.0.0

    - name: Verify kubectl version
      run: |
        kubectl version --client

    #- name: Kubernetes Set Context
    #  uses: Azure/k8s-set-context@v3.0
    #  with:
    #    method: kubeconfig
    #    cluster-name: ${{ env.EKS_CLUSTER_NAME }}
    
    - name: Update kube config
      run: |
        aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: "Verify nodes"
      run: |
        kubectl get nodes

    #- name: Login to ecr
    #  run: |
    #    aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 851725635917.dkr.ecr.us-east-1.amazonaws.com

    - name: "Verify Image Accessibility"
      run: |
        # Optional: Check if the image is accessible in the registry
        #docker pull 851725635917.dkr.ecr.us-east-1.amazonaws.com/hk-ecr-repo:latest
        docker pull ${{ secrets.ECR_REPOSITORY }}:latest

    - name: Create Kubernetes Namespace
      run: |
        kubectl create namespace ${{ env.EKS_NAMESPACE_NAME }} || echo "Namespace '${{ env.EKS_NAMESPACE_NAME }}' already exists"
          
    - name: Deploy to EKS
      run: |
        #kubectl create -f manifests/namespace.yaml
        kubectl create -f manifests/deployment.yaml
        kubectl create -f manifests/service.yaml
        
    - name: Wait for 20 seconds
      run: |
        echo "Waiting for 20 seconds..."
        sleep 20  # Pause for 20 seconds

    - name: "Verify Namespace"
      run: kubectl get namespaces
    - name: "Verify pod"
      run: |
        kubectl get pods -o wide
    - name: "Verify deployment"
      run: |
        kubectl get deployment
    - name: "Verify Service"
      run: |
        kubectl get svc
