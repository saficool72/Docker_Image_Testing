name: Docker Image CI
on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Optional: Remove if not needed
    - name: Set up Docker Buildx (only if building multi-platform images)
      uses: docker/setup-buildx-action@v3.7.1

    - name: Build docker image
      run: |
        docker build -t hk_image:v1 .

    - name: Filter docker image
      run: |
        docker images --filter reference=hk_image:v1

    - name: "Configure AWS Credentials"
      id: Configure-AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Authenticate to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Tag the Image
      run: |
        docker tag hk_image:v1 ${{ secrets.ECR_REPOSITORY }}:latest
        docker tag hk_image:v1 ${{ secrets.ECR_REPOSITORY }}:v1.0.0

    - name: Push the Image to Aws ECR
      run: |
        docker push ${{ secrets.ECR_REPOSITORY }}:latest
        docker push ${{ secrets.ECR_REPOSITORY }}:v1.0.0

    - name: Aqua Security Trivy
      uses: aquasecurity/trivy-action@0.29.0
      with:
        image-ref: ${{ secrets.ECR_REPOSITORY }}:latest
        scan-type: image
        severity: 'HIGH,CRITICAL'
        
    # Enable this step for Trivy security scan
    #- name: Aqua Security Trivy
    #  uses: aquasecurity/trivy-action@0.29.0
    #  with:
    #    image-ref: ${{ secrets.ECR_REPOSITORY }}:latest
    #    scan-type: image
    #    severity: 'HIGH,CRITICAL'
    #    output: "trivy-vuln-results.json"  # This specifies the output file for Trivy results
    #    format: 'json'  # Use 'json' to store results in a structured format

    # Optional: Verify that the Trivy scan output is in the expected location
    #- name: Verify Trivy output
    #  run: |
    #    ls -l ${{ github.workspace }}  # Check if the output file is in the workspace

    # Upload Trivy scan results
    #- name: Upload a Build Artifact
    #  uses: actions/upload-artifact@v4.4.3
    #  with:
    #    name: trivy-vuln-results
    #    path: ${{ github.workspace }}/trivy-vuln-results.json  # Ensure the correct path to the output file
    #    retention-days: 10

    # Image cleanup
    - name: Image cleanup
      if: always()
      run: |
        docker rmi hk_image:v1 ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.ECR_REPOSITORY }}:v1.0.0 || true
